{"version":3,"sources":["components/Header/Header.js","components/AddEntry/AddEntry.js","components/StockEntry/StockEntry.js","App.js","index.js"],"names":["Header","AddEntry","setEntry","useState","newQuantity","setNewQuantity","newPrice","setNewPrice","quantity","price","className","InputGroup","Text","id","Form","Control","size","type","placeholder","value","onChange","target","parseInt","isNaN","isDecimal","endsWith","parseFloat","Button","variant","onClick","StockEntry","totalQuantity","setTotalQuantity","averagePrice","setAveragePrice","entries","setEntries","getTotal","useEffect","forEach","Card","length","Body","entry","concat","Table","striped","bordered","hover","map","index","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.70712620.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Indian Stock Market - Stock Average Price Calculator</h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nimport \"./AddEntry.css\";\r\nconst AddEntry = ({ setEntry }) => {\r\n  const [newQuantity, setNewQuantity] = useState(\"\");\r\n  const [newPrice, setNewPrice] = useState(\"\");\r\n\r\n  const onChangeQuantity = ({ target }) => {\r\n    let { value } = target;\r\n    value = parseInt(value, 10);\r\n    if (!isNaN(value)) {\r\n      setNewQuantity(value);\r\n    }\r\n  };\r\n\r\n  const onChangePrice = ({ target }) => {\r\n    let { value } = target;\r\n    let isDecimal = value.endsWith(\".\");\r\n    value = parseFloat(value);\r\n    if (!isNaN(value)) {\r\n      if (isDecimal) {\r\n        value = value + \".\";\r\n      }\r\n      setNewPrice(value);\r\n    }\r\n  };\r\n\r\n  const AddEntry = () => {\r\n    if (newQuantity && newPrice) {\r\n      const newEntry = {\r\n        quantity: newQuantity,\r\n        price: newPrice\r\n      };\r\n      setEntry && setEntry(newEntry);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"add-entry-form\">\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text id=\"new-quantity\">Quantity</InputGroup.Text>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            type=\"text\"\r\n            aria-label=\"new quantity\"\r\n            aria-describedby=\"new-quantity\"\r\n            placeholder=\"\"\r\n            value={newQuantity}\r\n            onChange={onChangeQuantity}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text id=\"new-quantity\">Price</InputGroup.Text>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            type=\"text\"\r\n            aria-label=\"new price\"\r\n            aria-describedby=\"new-price\"\r\n            placeholder=\"\"\r\n            value={newPrice}\r\n            onChange={onChangePrice}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <Button variant=\"primary\" type=\"submit\" onClick={AddEntry}>\r\n            Add\r\n          </Button>\r\n        </InputGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEntry;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Table, Button } from \"react-bootstrap\";\r\n\r\nimport AddEntry from \"../AddEntry/AddEntry\";\r\nimport \"./StockEntry.css\";\r\n\r\nconst StockEntry = () => {\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [averagePrice, setAveragePrice] = useState(0.0);\r\n\r\n  const [entries, setEntries] = useState([]);\r\n\r\n  const getTotal = ({ quantity, price }) => {\r\n    return quantity * price;\r\n  };\r\n\r\n  const SetEntry = (entry) => {\r\n    const newEntries = [entry];\r\n    setEntries(newEntries.concat(entries));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let averagePrice = 0.0,\r\n      totalQuantity = 0;\r\n    entries.forEach(({ quantity, price }) => {\r\n      if (totalQuantity !== 0) {\r\n        const totalPrice = totalQuantity * averagePrice;\r\n        const currentTotalPrice = quantity * 1 * (price * 1);\r\n        const totalAveragePrice = totalPrice + currentTotalPrice;\r\n\r\n        totalQuantity = totalQuantity + quantity * 1;\r\n        averagePrice = totalAveragePrice / totalQuantity;\r\n      } else {\r\n        totalQuantity = quantity * 1;\r\n        averagePrice = price * 1;\r\n      }\r\n    });\r\n\r\n    setTotalQuantity(totalQuantity);\r\n    setAveragePrice(averagePrice);\r\n  }, [entries]);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>\r\n          <div className=\"header\">\r\n            <div className=\"header-labels\">\r\n              <h3>Average Price = {averagePrice}</h3>\r\n              <h6>Total Quantity = {totalQuantity}</h6>\r\n              <h6>\r\n                Total Investment ={\" \"}\r\n                {getTotal({ quantity: totalQuantity, price: averagePrice })}\r\n              </h6>\r\n            </div>\r\n            <div className=\"header-actions\">\r\n              {entries.length > 0 && (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setEntries([]);\r\n                  }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <AddEntry setEntry={SetEntry} />\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"sNo\">S.No.</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {entries.map(({ quantity, price }, index) => (\r\n                <tr key={(quantity = \"_\" + index)}>\r\n                  <td className=\"sNo\">{index + 1}</td>\r\n                  <td>{quantity}</td>\r\n                  <td>{price}</td>\r\n                  <td>{getTotal({ quantity, price })}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockEntry;\r\n","import React from \"react\";\n\nimport Header from \"./components/Header/Header\";\nimport StockHeader from \"./components/StockEntry/StockEntry\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <StockHeader />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}